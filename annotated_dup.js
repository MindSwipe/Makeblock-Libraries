var annotated_dup =
[
    [ "_USB_CONFIG_DEscriptOR", "struct__USB__CONFIG__DEscriptOR.html", "struct__USB__CONFIG__DEscriptOR" ],
    [ "_USB_CONFIG_DEscriptOR_LONG", "struct__USB__CONFIG__DEscriptOR__LONG.html", "struct__USB__CONFIG__DEscriptOR__LONG" ],
    [ "_USB_DEVICE_DEscriptOR", "struct__USB__DEVICE__DEscriptOR.html", "struct__USB__DEVICE__DEscriptOR" ],
    [ "_USB_ENDPOINT_DEscriptOR", "struct__USB__ENDPOINT__DEscriptOR.html", "struct__USB__ENDPOINT__DEscriptOR" ],
    [ "_USB_INTERF_DEscriptOR", "struct__USB__INTERF__DEscriptOR.html", "struct__USB__INTERF__DEscriptOR" ],
    [ "Cmd_list_tab_type", "structCmd__list__tab__type.html", "structCmd__list__tab__type" ],
    [ "Compass_Calibration_Parameter", "structCompass__Calibration__Parameter.html", "structCompass__Calibration__Parameter" ],
    [ "cRGB", "structcRGB.html", "structcRGB" ],
    [ "EEPROMClass", "structEEPROMClass.html", "structEEPROMClass" ],
    [ "EEPtr", "structEEPtr.html", "structEEPtr" ],
    [ "EERef", "structEERef.html", "structEERef" ],
    [ "Encoder_port_type", "structEncoder__port__type.html", "structEncoder__port__type" ],
    [ "irparams_t", "structirparams__t.html", "structirparams__t" ],
    [ "LED_Matrix_Clock_Number_Font_3x8_TypeDef", "structLED__Matrix__Clock__Number__Font__3x8__TypeDef.html", "structLED__Matrix__Clock__Number__Font__3x8__TypeDef" ],
    [ "LED_Matrix_Font_6x8_TypeDef", "structLED__Matrix__Font__6x8__TypeDef.html", "structLED__Matrix__Font__6x8__TypeDef" ],
    [ "MBotDCMotor", "classMBotDCMotor.html", "classMBotDCMotor" ],
    [ "Me4Button", "classMe4Button.html", "classMe4Button" ],
    [ "Me7SegmentDisplay", "classMe7SegmentDisplay.html", "classMe7SegmentDisplay" ],
    [ "Me_Encoder_type", "structMe__Encoder__type.html", "structMe__Encoder__type" ],
    [ "MeBluetooth", "classMeBluetooth.html", "classMeBluetooth" ],
    [ "MeBuzzer", "classMeBuzzer.html", "classMeBuzzer" ],
    [ "Mecolor", "classMecolor.html", null ],
    [ "MeColorSensor", "classMeColorSensor.html", "classMeColorSensor" ],
    [ "MeCompass", "classMeCompass.html", "classMeCompass" ],
    [ "MeDCMotor", "classMeDCMotor.html", "classMeDCMotor" ],
    [ "MeEncoderMotor", "classMeEncoderMotor.html", "classMeEncoderMotor" ],
    [ "MeEncoderNew", "classMeEncoderNew.html", "classMeEncoderNew" ],
    [ "MeEncoderOnBoard", "classMeEncoderOnBoard.html", "classMeEncoderOnBoard" ],
    [ "MeFlameSensor", "classMeFlameSensor.html", "classMeFlameSensor" ],
    [ "megapi_dc_type", "structmegapi__dc__type.html", "structmegapi__dc__type" ],
    [ "megaPi_slot", "structmegaPi__slot.html", "structmegaPi__slot" ],
    [ "megapipro_esc_type", "structmegapipro__esc__type.html", "structmegapipro__esc__type" ],
    [ "MeGasSensor", "classMeGasSensor.html", "classMeGasSensor" ],
    [ "MeGyro", "classMeGyro.html", "classMeGyro" ],
    [ "MeHostParser", "classMeHostParser.html", "classMeHostParser" ],
    [ "MeHumiture", "classMeHumiture.html", "classMeHumiture" ],
    [ "MeInfraredReceiver", "classMeInfraredReceiver.html", "classMeInfraredReceiver" ],
    [ "MeIR", "classMeIR.html", "classMeIR" ],
    [ "MeJoystick", "classMeJoystick.html", "classMeJoystick" ],
    [ "MeLEDMatrix", "classMeLEDMatrix.html", "classMeLEDMatrix" ],
    [ "MeLightSensor", "classMeLightSensor.html", "classMeLightSensor" ],
    [ "MeLimitSwitch", "classMeLimitSwitch.html", "classMeLimitSwitch" ],
    [ "MeLineFollower", "classMeLineFollower.html", "classMeLineFollower" ],
    [ "MeMegaPiDCMotor", "classMeMegaPiDCMotor.html", "classMeMegaPiDCMotor" ],
    [ "MeMegaPiPro4DcMotor", "classMeMegaPiPro4DcMotor.html", "classMeMegaPiPro4DcMotor" ],
    [ "MeMegaPiProESCMotor", "classMeMegaPiProESCMotor.html", "classMeMegaPiProESCMotor" ],
    [ "MeOnBoardTemp", "classMeOnBoardTemp.html", "classMeOnBoardTemp" ],
    [ "MeOneWire", "classMeOneWire.html", "classMeOneWire" ],
    [ "MePIRMotionSensor", "classMePIRMotionSensor.html", "classMePIRMotionSensor" ],
    [ "MePm25Sensor", "classMePm25Sensor.html", "classMePm25Sensor" ],
    [ "MePort", "classMePort.html", "classMePort" ],
    [ "MePort_Sig", "structMePort__Sig.html", "structMePort__Sig" ],
    [ "MePotentiometer", "classMePotentiometer.html", "classMePotentiometer" ],
    [ "MePressureSensor", "classMePressureSensor.html", "classMePressureSensor" ],
    [ "MePS2", "classMePS2.html", "classMePS2" ],
    [ "MeRGBLed", "classMeRGBLed.html", "classMeRGBLed" ],
    [ "MeSerial", "classMeSerial.html", "classMeSerial" ],
    [ "MeShutter", "classMeShutter.html", "classMeShutter" ],
    [ "MeSmartServo", "classMeSmartServo.html", "classMeSmartServo" ],
    [ "MeSoundSensor", "classMeSoundSensor.html", "classMeSoundSensor" ],
    [ "MeStepper", "classMeStepper.html", "classMeStepper" ],
    [ "MeStepperOnBoard", "classMeStepperOnBoard.html", "classMeStepperOnBoard" ],
    [ "MeTemperature", "classMeTemperature.html", "classMeTemperature" ],
    [ "MeTouchSensor", "classMeTouchSensor.html", "classMeTouchSensor" ],
    [ "MeUltrasonicSensor", "classMeUltrasonicSensor.html", "classMeUltrasonicSensor" ],
    [ "MeUSBHost", "classMeUSBHost.html", "classMeUSBHost" ],
    [ "MeVoice", "classMeVoice.html", "classMeVoice" ],
    [ "MeWifi", "classMeWifi.html", "classMeWifi" ],
    [ "PID_internal", "structPID__internal.html", "structPID__internal" ],
    [ "PM25DATASTRUCT", "structPM25DATASTRUCT.html", "structPM25DATASTRUCT" ],
    [ "PM25DATAUINO", "unionPM25DATAUINO.html", "unionPM25DATAUINO" ],
    [ "Servo", "classServo.html", "classServo" ],
    [ "servo_device_type", "structservo__device__type.html", "structservo__device__type" ],
    [ "servo_t", "structservo__t.html", "structservo__t" ],
    [ "ServoPin_t", "structServoPin__t.html", "structServoPin__t" ],
    [ "SoftwareSerial", "classSoftwareSerial.html", "classSoftwareSerial" ],
    [ "SPIClass", "classSPIClass.html", null ],
    [ "SPISettings", "classSPISettings.html", "classSPISettings" ],
    [ "sysex_message", "unionsysex__message.html", "unionsysex__message" ],
    [ "sysex_message_type", "structsysex__message__type.html", "structsysex__message__type" ],
    [ "TwoWire", "classTwoWire.html", "classTwoWire" ]
];